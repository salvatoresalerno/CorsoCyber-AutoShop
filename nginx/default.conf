# Reindirizzamento automatico da HTTP a HTTPS
server {
    listen 80;
    server_name corso-security.duckdns.org;
    return 301 https://$server_name$request_uri; # Redirect permanente a HTTPS
}

server {
    listen 443 ssl http2; # Abilita HTTP/2 per migliori prestazioni
    http2 on;

    server_name corso-security.duckdns.org;

    # Certificati SSL forniti da Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/corso-security.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/corso-security.duckdns.org/privkey.pem;

    # Configurazione avanzata SSL per maggiore sicurezza
    ssl_protocols TLSv1.2 TLSv1.3; # Permette solo protocolli sicuri
    ssl_prefer_server_ciphers on; # Usa la suite di cifratura preferita dal server
    ssl_session_timeout 1d; # Timeout della sessione SSL di 1 giorno
    ssl_session_cache shared:SSL:50m; # Memorizza le sessioni SSL per migliorare le prestazioni
    ssl_session_tickets off; # Disabilita i session tickets per migliorare la sicurezza
    ssl_stapling on; # Abilita OCSP stapling per ridurre i tempi di verifica del certificato
    ssl_stapling_verify on; # Verifica le risposte OCSP per garantire autenticit√†

    # Nasconde informazioni sul server per sicurezza
    server_tokens off; # Nasconde la versione di Nginx nelle risposte HTTP
    proxy_hide_header X-Powered-By; # Nasconde l'header X-Powered-By
    proxy_hide_header Server;  # Nasconde l'header Server
    add_header X-Powered-By ""; # Sovrascrive l'header con un valore vuoto

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # Abilita HSTS per 1 anno
    add_header X-Frame-Options "DENY" always; # Previene il clickjacking
    add_header X-Content-Type-Options "nosniff" always; # Previene attacchi MIME sniffing
    add_header X-XSS-Protection "1; mode=block" always; # Abilita protezione XSS
    add_header Referrer-Policy "no-referrer" always; # Non invia il referrer
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always; # Blocca accesso a geo/microfono/fotocamera

    # Content Security Policy (CSP) per limitare le origini consentite
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com;
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
        font-src 'self' https://fonts.gstatic.com;
        img-src 'self' data:;
        frame-ancestors 'none';
        form-action 'self';
        upgrade-insecure-requests;" always;

    # Limita la dimensione massima dei file caricati
    client_max_body_size 10M;

    # Configurazione del reverse proxy per il frontend (Next.js)
    location / {
        proxy_pass http://client:3000;  # Reindirizza le richieste al client Next.js
        proxy_http_version 1.1;  # Usa HTTP/1.1 per evitare problemi di connessione
        proxy_set_header Host $http_host;  # Mantiene l'host originale
        proxy_set_header X-Forwarded-Host $http_host;  # Forward dell'host originale
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # IP originale del client
        proxy_set_header X-Forwarded-Proto $scheme;  # Indica il protocollo originale (HTTP/HTTPS)
        proxy_set_header X-Real-IP $remote_addr;  # Passa l'IP reale del client
        proxy_cache_bypass $http_upgrade;  # Evita caching per richieste WebSocket
        proxy_set_header Connection $http_connection;  # Gestisce connessioni persistenti
        proxy_hide_header X-Powered-By;  # Nasconde informazioni sul backend
        proxy_hide_header Server;  # Nasconde informazioni sul server
    }

    # Configurazione del reverse proxy per il caricamento delle immagini
    location /uploads/ {
        proxy_pass http://server:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Origin $http_origin;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

    # Configurazione del reverse proxy per file statici di Next.js
    location /_next/static/ {
        proxy_pass http://client:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }

    # Configurazione del reverse proxy per le API backend
    location /v1/ {
        proxy_pass http://server:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Origin $http_origin;
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
}
